pipeline {
   agent {
    kubernetes {
          inheritFrom 'maven'
          containerTemplate {
            name 'maven'
            image 'feeeng/builder-base:v3.4.0-devspace'
          }
        }

  }

    parameters {
        string(name:'TAG_NAME',defaultValue: '',description:'tag name ')
    }

    environment {
        DOCKER_CREDENTIAL_ID = 'dockerhub-id'
        GITHUB_CREDENTIAL_ID = 'github-id'
        KUBECONFIG_CREDENTIAL_ID = 'demo-kubeconfig'
        REGISTRY = 'docker.io'
        DOCKERHUB_NAMESPACE = 'feeeng'
        GITHUB_ACCOUNT = 'Feeeenng'
        APP_NAME = 'devops-maven-sample'
        NAMESPACE = 'devspace'
    }

    stages {
        stage ('checkout scm') {
            steps {
                  checkout([
                    $class: 'GitSCM',
                    branches: [[name: 'devspace']],
                    doGenerateSubmoduleConfigurations: false,
                    extensions: [],
                    submoduleCfg: [],
                    userRemoteConfigs: [[
                      credentialsId: "$GITHUB_CREDENTIAL_ID", 
                      url: "https://github.com/Feeeenng/devops-maven-sample.git"
                        ]]
                    ])
             
            }
        }
        
        stage ('build & push') {
            steps {
                container ('maven') {
                    withCredentials([usernamePassword(passwordVariable : 'DOCKER_PASSWORD' ,usernameVariable : 'DOCKER_USERNAME' ,credentialsId : "$DOCKER_CREDENTIAL_ID" ,)]) {
                        sh 'echo "$DOCKER_PASSWORD" | docker login $REGISTRY -u "$DOCKER_USERNAME" --password-stdin'
                    }
                }
            }
        }


        stage ('deploy') {
            steps {
                container ('maven') {
                    withCredentials([kubeconfigFile(credentialsId: env.KUBECONFIG_CREDENTIAL_ID,variable: 'KUBECONFIG')])
                        {
                            sh "devspace use namespace ${NAMESPACE}"
                            sh "devspace deploy"
                        }
                }
            }
        }
     

    }
}
